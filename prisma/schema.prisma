// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  PATIENT
  DOCTOR
  ADMIN
}

enum Status {
  PEDING
  CONFIRMED
  CANCELLED
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  role      Role[]
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Doctor    Doctor[]
  Patient   Patient[]
  Message   Message[]

  @@map("users")
}

model Doctor {
  id             Int           @id @default(autoincrement())
  userId         Int
  user           User          @relation(fields: [userId], references: [id])
  specialization String[]
  availableTimes String[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  Appointment    Appointment[]
}

model Patient {
  id             Int           @id @default(autoincrement())
  userId         Int
  user           User          @relation(fields: [userId], references: [id])
  birthdate      DateTime
  medicalHistory String
  Appointment    Appointment[]

  @@map("patient")
}

model Appointment {
  id          Int      @id @default(autoincrement())
  doctorId    Int
  doctor      Doctor   @relation(fields: [doctorId], references: [id])
  patientId   Int
  patient     Patient  @relation(fields: [patientId], references: [id])
  scheduledAt DateTime
  status      Status[]
  Chat        Chat[]
}

model Chat {
  id            Int         @id @default(autoincrement())
  appointmentId Int
  appointment   Appointment @relation(fields: [appointmentId], references: [id])
  messages      Message[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Message {
  id       Int      @id @default(autoincrement())
  senderId Int
  sender   User     @relation(fields: [senderId], references: [id])
  Chat     Chat?    @relation(fields: [chatId], references: [id])
  chatId   Int?
  sent     DateTime
}
